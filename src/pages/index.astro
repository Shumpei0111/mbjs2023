---
import Fv from "@/components/top/fv.astro";
import SectionBg from "@/components/top/sectionBg.astro";
import Layout from "../layouts/Layout.astro";
import Marquee from "@/components/common/marquee.astro";
import { Picture } from "astro-imagetools/components";

import { websiteArtworks, doujinArtworks } from "@/lib/project";

type ImageObj = {
  width: number;
  height: number;
};

const workImage: ImageObj = {
  width: 530,
  height: 530,
};

const doujinWorkImage: ImageObj = {
  width: 430,
  height: 600,
};
---

<Layout title="MB.js">
  <Fv />
  <Marquee text="RECENT PROJECT" isShowSeparate={true} />
  <main>
    <section>
      <h3>
        <SectionBg genre="WEBSITE" />
      </h3>
      <div class="articleWrapper">
        {
          websiteArtworks.map((item) => (
            <article class="workArticle">
              <div class="cover">
                <a
                  href={item.url}
                  target="_blank"
                  tabindex="1"
                  rel="noopener noreferrer"
                >
                  <span class="articleImageWrapper">
                    <span class="itemImageCover">
                      <Picture
                        src={item.coverImagePath}
                        alt={item.title}
                        width={workImage.width}
                        height={workImage.height}
                        preload="webp"
                        loading="lazy"
                        objectPosition={"50% 0%"}
                      />
                    </span>
                    <span class="itemImage">
                      <Picture
                        src={item.imagePath}
                        alt={item.title}
                        width={workImage.width}
                        height={workImage.height}
                        preload="webp"
                        loading="lazy"
                        objectPosition={"50% 0%"}
                      />
                    </span>
                  </span>
                </a>
              </div>
              <p class="title">{item.title}</p>
              <p class="genre">{item.genre}</p>
              <div class="hiddenField">
                <p class="description">{item.description}</p>
                <p class="caption">Front-End : {item.stack.fontEnd}</p>
                <p class="caption">Infra : {item.stack.infra}</p>
                <p class="caption">Period : {item.stack.period}</p>
                <div class="flex responsibleWrapper">
                  <p>Responsible :&nbsp;</p>
                  <ul class="flex responsibleListWrapper align-center">
                    {item.stack.responsible.map((res, ind) =>
                      ind !== item.stack.responsible.length - 1 &&
                      item.githubURL ? (
                        <li class="responsibleItem">{res}&nbsp;/&nbsp;</li>
                      ) : (
                        <li class="responsibleItem">{res}</li>
                      )
                    )}
                    <li class="responsibleItem">
                      <span>&nbsp;/&nbsp;</span>
                      {item.githubURL && (
                        <a
                          href={item.githubURL}
                          target="_blank"
                          rel="noopener noreferrer"
                        >
                          GitHub
                        </a>
                      )}
                    </li>
                  </ul>
                </div>
              </div>
            </article>
          ))
        }
      </div>
    </section>
    <section>
      <h3>
        <SectionBg genre="DOUJIN" />
      </h3>
      <div class="whatsActive">
        <p class="whatsActiveHead">同人活動「なな爺」名義にて活動中</p>
        <div>
          <p>
            【ファッションイラスト×アニメ】をコンセプトに、同人サークル「1月の朝」で<br
            />
            ガルパン（ガールズアンドパンツァー）やプリキュアなどの二次創作をしています。<br
            />
            アナログ感のある、ガーリーでちょっとクラシカルなイラストを制作しています。
          </p>
        </div>
      </div>
      <div class="relative">
        <div class="doujinSideWrapper">
          <div class="adjust">
            <div class="side-scroll-area">
              <div class="doujinWrapper side-scroll-wrap">
                {
                  doujinArtworks.map((item, ind) => (
                    <article class="workArticle side-scroll-item">
                      <div class="dojinCover">
                        <a
                          href={item.url}
                          target="_blank"
                          tabindex="1"
                          rel="noopener noreferrer"
                        >
                          <span class="articleImageWrapper">
                            <span class="itemImageCover">
                              <Picture
                                src={item.coverImagePath}
                                alt={item.title}
                                width={doujinWorkImage.width}
                                height={doujinWorkImage.height}
                                preload="webp"
                                loading="lazy"
                                objectPosition={"50% 0%"}
                              />
                            </span>
                            <span class="itemImage">
                              <Picture
                                src={item.imagePath}
                                alt={item.title}
                                width={doujinWorkImage.width}
                                height={doujinWorkImage.height}
                                preload="webp"
                                loading="lazy"
                                objectPosition={"50% 0%"}
                              />
                            </span>
                          </span>
                        </a>
                      </div>
                      <div class="workArticleInner">
                        <p class="title">{item.title}</p>
                        <div class="description">
                          <p>Event: {item.eventName}</p>
                          <p class="genre">GENRE: {item.genre}</p>
                          <p>{item.description}</p>
                        </div>
                        <div class="flex responsibleWrapper">
                          {Array.isArray(item.stack) ? (
                            <ul class="responsibleListWrapper">
                              {item.stack.map((stack) => (
                                <li>
                                  {stack.productType} * {stack.productCount}
                                  <ul>
                                    {Array.isArray(stack.productStack) &&
                                      stack.productStack.map((s) => (
                                        <li class="stackList">- {s}</li>
                                      ))}
                                  </ul>
                                  {typeof stack.productStack === "string" && (
                                    <p class="stackList">
                                      - {stack.productStack}
                                    </p>
                                  )}
                                </li>
                              ))}
                            </ul>
                          ) : (
                            <ul class="responsibleListWrapper">
                              <li>
                                {item.stack.productType} *{" "}
                                {item.stack.productCount}
                              </li>
                            </ul>
                          )}
                        </div>
                      </div>
                    </article>
                  ))
                }
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
    <section>
      <h3>
        <SectionBg genre="OTHER" />
      </h3>
    </section>
  </main>
</Layout>

<script>
  import sideScroll from "../lib/sideScroll";
  import activeCoverDisable from "../lib/projectCoverImage";

  sideScroll();
  activeCoverDisable();
</script>

<style lang="scss">
  @use "../style/variables.scss" as v;
  h3 {
    line-height: 1;
  }

  section {
    margin-bottom: 200px;
  }

  .articleWrapper {
    display: flex;
    flex-wrap: wrap;
    gap: 103px;
    justify-content: space-between;
  }

  .workArticle {
    font-family: YuMincho, "Yu Mincho", serif;
    width: 530px;
    line-height: 2;
  }

  .itemImage {
    display: none;
  }

  .hiddenField {
    visibility: hidden;
  }

  .hiddenCover {
    .itemImageCover {
      display: none;
    }

    .itemImage {
      display: block;
    }
  }

  .cover:hover ~ .hiddenField {
    visibility: visible;
  }

  .title {
    font-size: 3rem;
    margin-bottom: 12px;
  }

  .genre {
    margin-bottom: 16px;
    font-size: 1.4rem;
  }

  .description {
    border-top: 1px solid;
    border-bottom: 1px solid;
    padding: 16px 0;
    font-size: 1.4rem;
    margin-bottom: 32px;
  }

  .responsibleWrapper {
    align-items: baseline;
  }

  .whatsActive {
    margin-bottom: 44px;
    line-height: 2;
  }

  .whatsActiveHead {
    font-size: 3rem;
    display: inline-block;
    border-bottom: 2px solid;
    margin-bottom: 24px;
  }

  .doujinSideWrapper {
    background-color: v.$primary;
  }

  .adjust {
    position: relative;
    margin: 0 calc(-50vw + 50%) 0;
    background-color: v.$primary;
  }

  .doujinWrapper {
    background-color: v.$primary;
    display: flex;
    flex-wrap: nowrap;
    height: 100vh;

    & * {
      color: black;
    }

    .workArticle {
      display: flex;
      flex-wrap: wrap;
      flex-direction: column;
      height: calc(100vh - 4rem);
      border-bottom: 2px solid #000;
      background-color: v.$primary;
      padding: 10rem 0;
    }

    .workArticleInner {
      max-width: 680px;
      padding: 0 32px;
      margin-left: -200px;
    }
  }

  .stackList {
    padding-left: 1rem;
  }

  .responsibleListWrapper {
    margin: 0;
  }

  .caption,
  .responsibleItem {
    font-size: 1.4rem;
  }
</style>
